import{y as a,z as n,R as u,A as o,B as c}from"../index45884.js";class t{static async fetchAll(s){return(await a("/users",s)).data}static async getUserDetail(s){return(await a(`/users/${s}`)).data.user}static async createUser(s){return(await n("/users",s)).data.user}static async deleteUser(s){return(await u(`/users/${s}`)).data}static async enableUser(s){return(await a(`/users/${s}/enable`)).data}static async updateUser(s){return(await o(`/users/${s.user.id}`,s)).data.user}static async changePassword(s){return(await n(`/users/${s.user.id}/change_password`,s)).data.user}}const p=c({id:"user",state:()=>({user:{},users:[],response_users:{},total_users:Number}),getters:{allUsers:e=>e.response_users.users,responseUsers:e=>e.response_users,getTotalUsers:e=>e.response_users?e.response_users.total:0,getCurrentUser:e=>e.user},actions:{async fetchAllUsers(e){await t.fetchAll(e).then(s=>this.response_users=s)},async fetchUserDetail(e){await t.getUserDetail(e).then(s=>this.user=s)},async createUser(e){await t.createUser(e).then(s=>this.user=s)},async updateUser(e){await t.updateUser(e).then(s=>this.user=s)},async deleteUser(e){await t.deleteUser(e).then(s=>this.user={})}}});export{p as u};
